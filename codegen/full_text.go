package main

import . "github.com/vuho-pg/esq/codegen/builder"

func fullTextQueryBuild() error {
	return Run(
		Map("Match", Struct("Match",
			Field("Query").String().Required(),
			Field("Analyzer").String(),
			Field("AutoGenerateSynonymsPhraseQuery").Bool(),
			Field("Fuzziness").String(),
			Field("PrefixLength").Int(),
			Field("MaxExpansions").Int(),
			Field("FuzzyTranspositions").Bool(),
			Field("FuzzyRewrite").String(),
			Field("Lenient").Bool(),
			Field("Operator").String(),
			Field("MinimumShouldMatch").String(),
			Field("ZeroTermsQuery").String(),
		)),
		Map("MatchBoolPrefix", Struct("MatchBoolPrefix",
			Field("Query").String().Required(),
			Field("Analyzer").String(),
			Field("Fuzziness").String(),
			Field("MinimumShouldMatch").String(),
			Field("PrefixLength").Int(),
			Field("MaxExpansions").Int(),
			Field("FuzzyTranspositions").Bool(),
			Field("FuzzyRewrite").String(),
		)),
		Map("MatchPhrase", Struct("MatchPhrase",
			Field("Query").String().Required(),
			Field("Analyzer").String(),
			Field("ZeroTermsQuery").String(),
		)),
		Map("MatchPhrasePrefix", Struct("MatchPhrasePrefix",
			Field("Query").String().Required(),
			Field("Analyzer").String(),
			Field("MaxExpansions").Int(),
			Field("Slop").Int(),
			Field("ZeroTermsQuery").String(),
		)),
		Map("CombinedFields", Struct("CombinedFields",
			Field("Fields").String().Required().Array(),
			Field("Query").String().Required(),
			Field("AutoGenerateSynonymsPhraseQuery").Bool(),
			Field("Operator").String(),
			Field("MinimumShouldMatch").String(),
			Field("ZeroTermsQuery").String(),
		)),
		Map("MultiMatch", Struct("MultiMatch",
			Field("Query").String().Required(),
			Field("Fields").String().Required().Array(),
			Field("Type").String(),
			Field("Analyzer").String(),
			Field("Boost").Float64(),
			Field("Operator").String(),
			Field("MinimumShouldMatch").String(),
			Field("Fuzziness").String(),
			Field("Lenient").Bool(),
			Field("PrefixLength").Int(),
			Field("MaxExpansions").Int(),
			Field("FuzzyRewrite").String(),
			Field("ZeroTermsQuery").String(),
			Field("CutOffFrequency").Float64(),
			Field("AutoGenerateSynonymsPhraseQuery").Bool(),
			Field("FuzzyTranspositions").Bool(),
		)),
		Map("QueryString", Struct("QueryString",
			Field("Query").String().Required(),
			Field("DefaultField").String(),
			Field("AllowLeadingWildcard").Bool(),
			Field("AnalyzeWildcard").Bool(),
			Field("Analyzer").String(),
			Field("AutoGenerateSynonymsPhraseQuery").Bool(),
			Field("Boost").Float64(),
			Field("DefaultOperator").String(),
			Field("EnablePositionIncrements").Bool(),
			Field("Fields").String().Array(),
			Field("Fuzziness").String(),
			Field("FuzzyMaxExpansions").Int(),
			Field("FuzzyPrefixLength").Int(),
			Field("FuzzyTranspositions").Bool(),
			Field("Lenient").Bool(),
			Field("MaxDeterminizedStates").Int(),
			Field("MinimumShouldMatch").String(),
			Field("QuoteAnalyzer").String(),
			Field("PhraseSlop").Int(),
			Field("QuoteFieldSuffix").String(),
			Field("Rewrite").String(),
			Field("TimeZone").String(),
		)),
		Map("SimpleQueryString", Struct("SimpleQueryString",
			Field("Query").String().Required(),
			Field("Fields").String().Array(),
			Field("DefaultOperator").String(),
			Field("AnalyzeWildcard").Bool(),
			Field("Analyzer").String(),
			Field("AutoGenerateSynonymsPhraseQuery").Bool(),
			Field("Flags").String(),
			Field("FuzzyMaxExpansions").Int(),
			Field("FuzzyPrefixLength").Int(),
			Field("FuzzyTranspositions").Bool(),
			Field("Lenient").Bool(),
			Field("MinimumShouldMatch").String(),
			Field("QuoteFieldSuffix").String(),
		)),
	)
}
