package main

import . "github.com/vuho-pg/esq/codegen/builder"

func termBuild() error {
	return Run(
		Wrap("Exists", Struct("Exists",
			Field("Field").String().Required(),
		)).Implement(queryInterface),
		Map("Fuzzy", Struct("Fuzzy",
			Field("Value").String().Required(),
			Field("Fuzziness").String(),
			Field("MaxExpansions").Int(),
			Field("PreflixLength").Int(),
			Field("Transposition").Bool(),
			Field("Rewrite").String(),
		)).Implement(queryInterface),
		Wrap("IDS", Struct("IDS",
			Field("Values").String().Required(),
		)).Implement(queryInterface),
		Map("Prefix", Struct("Prefix",
			Field("Value").String().Required(),
			Field("Rewrite").String(),
			Field("CaseInsensitive").Bool(),
		)).Implement(queryInterface),
		Map("Range", Struct("Range",
			Field("GT").Any(),
			Field("GTE").Any(),
			Field("LT").Any(),
			Field("LTE").Any(),
			Field("Format").String(),
			Field("Relation").String(),
			Field("Timezone").String(),
			Field("Boost").Float64(),
		)).Implement(queryInterface),
		Map("Regexp", Struct("Regexp",
			Field("Value").String().Required(),
			Field("Flags").String(),
			Field("CaseInsensitive").Bool(),
			Field("MaxDetermiinizzedStates").Int(),
			Field("Rewrite").String(),
		)).Implement(queryInterface),
		Map("Term", Struct("Term",
			Field("Value").String().Required(),
			Field("Boost").Float64(),
			Field("CaseInsensitive").Bool(),
		)).Implement(queryInterface),
		// TODO: Terms
		Map("TermsSet", Struct("TermsSet",
			Field("Terms").String().Required().Array(),
			Field("MinimumShouldMatchField").String(),
			Field("MinimumShouldMatchScript").String(),
		)).Implement(queryInterface),
		Wrap("Type", Struct("Type",
			Field("Value").String().Required(),
		)).Implement(queryInterface),
		Map("Wildcard", Struct("Wildcard",
			Field("Value").String().Required(),
			Field("Boost").Float64(),
			Field("CaseInsensitive").Bool(),
			Field("Rewrite").String(),
		)).Implement(queryInterface),
	)
}
