package esq


type {{.Name}}Builder struct {
    {{.InnerType.Name}} *{{.InnerType.Name}}Builder `json:"{{.JsonTag}}"`
}



{{- range .InnerType.Methods}}
func ({{$.ReceiverName}} *{{$.Name}}Builder) {{.}}() {}
{{- end}}


func {{.Name}}(
{{- range .InnerType.Fields}}
{{- if .Required}}
{{.ParamName}} {{.Type}},{{- end}}
{{- end}}
) *{{.Name}}Builder {
    return &{{.Name}}Builder {
        {{.InnerType.Name}}:  &{{.InnerType.Name}}Builder{
                                    {{- range .InnerType.Fields}}
                                    {{- if .Required}}
                                    {{.Name}}: {{.ParamName}},
                                    {{- else}}
                                    {{- if .HasDefault}}
                                    {{.Name}}: common.PtrOf({{.DefaultValue}}),{{- end}}{{- end}}
                                    {{- end}}
                                 },
        }
}


{{- range .InnerType.Fields}}
func ({{$.ReceiverName}} *{{$.Name}}Builder) Set{{.Name}}({{.ParamName}} {{if .IsArr}}...{{.SingularType}}{{else}}{{.Type}}{{end}}) *{{$.Name}}Builder {
    {{$.ReceiverName}}.{{$.InnerType.Name}}.{{.Name}} = {{if not .Required}}&{{end}}{{.ParamName}}
    return {{$.ReceiverName}}
}

{{- end}}